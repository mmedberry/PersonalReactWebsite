{"version":3,"sources":["types.ts","Components/navBar.tsx","Pages/homePage.tsx","Pages/aboutPage.tsx","Pages/conactPage.tsx","Pages/projectsPage.jsx","Pages/etchASketch.tsx","Pages/reflectionsPage.tsx","index.tsx"],"names":["PageState","Direction","NavBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Grommet","Box","direction","background","round","Button","margin","label","icon","Home","primary","props","pageState","onClick","handleHomeClick","About","RestroomMen","handleAboutClick","Projects","Code","handleProjectsClick","Reflections","DocumentText","handleReflectionsClick","Contact","ContactInfo","handleContactClick","React","Component","HomePage","Fragment","Text","size","AboutPage","ContactPage","href","ProjectsPage","Accordion","AccordionPanel","Image","fit","src","alignSelf","responsive","alignContent","pad","basis","overflow","EtchASketch","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","keys","None","componentDidMount","document","addEventListener","logKey","componentWillUnmount","removeEventListener","turnRight","console","log","turnLeft","turnBack","turnUp","e","setState","ReflectionsPage","MainPage","page","homePage_HomePage","aboutPage_AboutPage","conactPage_ContactPage","projectsPage_ProjectsPage","handleEtchASketchClick","etchASketch_EtchASketch","reflectionsPage_ReflectionsPage","navBar_NavBar","ReactDOM","render","src_MainPage","getElementById"],"mappings":"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","file":"static/js/main.3039dea6.chunk.js","sourcesContent":["export enum PageState {\r\n    Home,\r\n    About,\r\n    Contact,\r\n    Projects,\r\n    EtchASketch,\r\n    Reflections,\r\n}\r\n\r\nexport enum Direction {\r\n    Up,\r\n    Down,\r\n    Left,\r\n    Right,\r\n    None,\r\n}\r\n\r\nexport class DictionaryEntry {\r\n    /**\r\n     * Lower case name of an English dictionary entry\r\n     */\r\n    name: string;\r\n    /**\r\n     * Definition of an English dictionary entry\r\n     */\r\n    definition: string;\r\n    constructor(data: any) {\r\n        let tempName: string = data.Name;\r\n        this.name = tempName.toLowerCase();\r\n        this.definition = data.Definition;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Box, Button, Grommet } from \"grommet\";\r\nimport {\r\n    Home,\r\n    Code,\r\n    ContactInfo,\r\n    RestroomMen,\r\n    Android,\r\n    DocumentText,\r\n} from \"grommet-icons\";\r\nimport { PageState } from \"../types\";\r\n\r\ninterface INavBarProps {\r\n    handleHomeClick: () => void;\r\n    handleAboutClick: () => void;\r\n    handleProjectsClick: () => void;\r\n    handleContactClick: () => void;\r\n    handleEtchASketchClick: () => void;\r\n    handleReflectionsClick: () => void;\r\n    pageState?: PageState;\r\n}\r\ninterface INavBarState {\r\n    page: string;\r\n}\r\nexport class NavBar extends React.Component<INavBarProps> {\r\n    render() {\r\n        return (\r\n            <Grommet>\r\n                <Box direction=\"row\" background=\"brand\" round>\r\n                    <Button\r\n                        margin=\"small\"\r\n                        label=\"Home\"\r\n                        icon={<Home />}\r\n                        primary={this.props.pageState === PageState.Home}\r\n                        onClick={this.props.handleHomeClick}\r\n                    />\r\n                    <Button\r\n                        margin=\"small\"\r\n                        label=\"About\"\r\n                        primary={this.props.pageState === PageState.About}\r\n                        icon={<RestroomMen />}\r\n                        onClick={this.props.handleAboutClick}\r\n                    />\r\n                    <Button\r\n                        margin=\"small\"\r\n                        primary={this.props.pageState === PageState.Projects}\r\n                        label=\"Projects\"\r\n                        icon={<Code />}\r\n                        onClick={this.props.handleProjectsClick}\r\n                    />\r\n                    <Button\r\n                        margin=\"small\"\r\n                        primary={this.props.pageState === PageState.Reflections}\r\n                        label=\"Reflections\"\r\n                        icon={<DocumentText />}\r\n                        onClick={this.props.handleReflectionsClick}\r\n                    />\r\n                    <Button\r\n                        margin=\"small\"\r\n                        primary={this.props.pageState === PageState.Contact}\r\n                        label=\"Contact\"\r\n                        icon={<ContactInfo />}\r\n                        onClick={this.props.handleContactClick}\r\n                    />\r\n                    {/* <Button\r\n                        margin=\"small\"\r\n                        primary={this.props.pageState === PageState.EtchASketch}\r\n                        label=\"Game\"\r\n                        icon={<Android />}\r\n                        onClick={this.props.handleEtchASketchClick}\r\n                    /> */}\r\n                </Box>\r\n            </Grommet>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Box, Image, Text } from \"grommet\";\r\n\r\nexport class HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>\r\n                    {\" \"}\r\n                    My name is Max Medberry, and I'm a senior in Computer\r\n                    Engineering at Iowa State University.\r\n                </h1>\r\n                <Text size=\"large\">\r\n                    This is a small personal site to present and link to some of\r\n                    my personal information and projects. Click on a button at\r\n                    the top to learn more about me or what I've been working on!\r\n                </Text>\r\n                {/* <Box height=\"small\" width=\"small\">\r\n                    <Image fit=\"cover\" src=\"./suit_img_50x50.jpg\" />\r\n                </Box> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"grommet\";\r\n\r\nexport class AboutPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1> About Me</h1>\r\n                <Text>\r\n                    I'm a senior in Computer Engineering at Iowa State\r\n                    University. My main area of interest in in software\r\n                    engineering. Languages I have worked in Java, C, C#,\r\n                    JavaScript, and TypeScript. I also have experience in\r\n                    frameworks like .NET Core, Express.js, Node.js, and\r\n                    especially ReactJS. I have done projects in embedded design,\r\n                    desktop applications with internet connectivity, and web\r\n                    apps.\r\n                </Text>\r\n                <br />\r\n                <br />\r\n                <Text>\r\n                    {\" \"}\r\n                    I am also a member of Tau Beta Pi, an engineering honor\r\n                    society, and currently work as a pharmacy technician\r\n                    part-time.\r\n                </Text>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"grommet\";\r\n\r\nexport class ContactPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Contact information</h1>\r\n                <br />\r\n                <Text>Phone: ‪(515)-337-2496</Text>\r\n                <br />\r\n                <br />\r\n                <Text>Email: medberry@iastate.edu</Text>\r\n                <br />\r\n                <br />\r\n                <Text>\r\n                    <a href=\"https://github.com/mmedberry\">Github</a>\r\n                </Text>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Box, Image, Accordion, AccordionPanel, Text } from \"grommet\";\r\n\r\nexport class ProjectsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Project information</h1>\r\n                <Accordion>\r\n                    <AccordionPanel label=\"Mars Rover - Embedded Systems\">\r\n                        <Text>\r\n                            This was a project I did for Cpr E 288: Embedded\r\n                            Systems Engineering. In this project I was on a\r\n                            three person team that created a prototype mars\r\n                            rover based on an ARM processor and an iRobot Roomba\r\n                            using C. We were able to connect to the rover over\r\n                            Wi-Fi and give it commands and receive data back.\r\n                            Commands given to the rover consisted of movement\r\n                            and surveying the surroundings. The robot was able\r\n                            to take IR and sonar readings of objects in its\r\n                            vicinity and record collisions, and send that data\r\n                            back to the team over Wi-Fi. We demonstrated the\r\n                            functionality of our rover by using it to navigate a\r\n                            course littered with objects into a target zone\r\n                            while limiting collisions.\r\n                        </Text>\r\n                        <Image\r\n                            fit=\"cover\"\r\n                            src=\"./rover.jpg\"\r\n                            alignSelf=\"start\"\r\n                        />\r\n                    </AccordionPanel>\r\n                    <AccordionPanel label=\"ProjectX Engine - Software Dev Practices\">\r\n                        <Box>\r\n                            <Text>\r\n                                This was a project I did for Com S 309: Software\r\n                                Development Practices. In this project I was\r\n                                part of a team that created a modular game\r\n                                engine and desktop game application based on\r\n                                that game engine. The game engine was created in\r\n                                Java and is capable of efficiently rendering a\r\n                                2-D game. The game engine supports multiplayer\r\n                                functionality with a dedicated server machine\r\n                                for hosting peer-to-peer play.\r\n                            </Text>\r\n                        </Box>\r\n                        <Box responsive direction=\"column\" alignContent=\"start\">\r\n                            <Box pad=\"small\" basis=\"1/2\">\r\n                                <Image\r\n                                    fit=\"cover\"\r\n                                    src=\"./gameScreen.png\"\r\n                                    alignSelf=\"start\"\r\n                                />\r\n                                <Text>\r\n                                    Above is an in-game screen from the ProjectX\r\n                                    game engine. Players are able to move, pick\r\n                                    up and use objects, and attack other players\r\n                                    or NPC's. The game can support multiple\r\n                                    players through the use of online\r\n                                    multiplayer via a dedicated server.\r\n                                </Text>\r\n                                <br />\r\n                                <Text>\r\n                                    The grid overlay, path making diagrams, and\r\n                                    entity borders are all game developer only\r\n                                    tools to help create the game.\r\n                                </Text>\r\n                            </Box>\r\n                            <Box basis=\"1/2\" pad=\"small\" overflow=\"auto\">\r\n                                <Image\r\n                                    fit=\"cover\"\r\n                                    src=\"./projectDesign.png\"\r\n                                    alignSelf=\"start\"\r\n                                />{\" \"}\r\n                                <Text>\r\n                                    Above is the project design overview. We\r\n                                    designed our game engine to allow game\r\n                                    designers to be as removed from the coding\r\n                                    as possible when they want to design a new\r\n                                    game.\r\n                                </Text>\r\n                                <br />\r\n                                <Text>\r\n                                    The modularity of the game engine means that\r\n                                    a developer can create a full fledged game\r\n                                    with only some 2-D sprites, a .txt file to\r\n                                    generate the world from, and some new or\r\n                                    modified Enum data.\r\n                                </Text>\r\n                            </Box>\r\n                        </Box>\r\n                    </AccordionPanel>\r\n                    <AccordionPanel label=\"Drawme.io - Construction of User Interfaces\">\r\n                        <Text>\r\n                            We created an online multiplayer game where players\r\n                            submit an image, and other players try to be the\r\n                            best to redraw that image. I was project leader on\r\n                            this team and divised the core idea and architure of\r\n                            the project, and led the team meetings and\r\n                            communication. We decided a web application was the\r\n                            best way to develop the game, and this was my first\r\n                            exposure to many web technologies. I also gained\r\n                            some experience in leading a team. We used some\r\n                            common industry tools like JavaScript, HTML/HTML\r\n                            generator engines, and Express.js framework server.{\" \"}\r\n                        </Text>\r\n                    </AccordionPanel>\r\n                    <AccordionPanel label=\"Realtime Volumetric Analysis - Senior Design\">\r\n                        <Text>\r\n                            My senior design team is currently working on\r\n                            creating a UAV capable of using AI to do volumetric\r\n                            analysis of objects, and fly autonomously. My\r\n                            position on the team was chief backend engineer, and\r\n                            I created programs to interface the hardware of the\r\n                            drone with external software programs. This project\r\n                            has taught me about software architecture, project\r\n                            planning, and team work and communication. Some\r\n                            specific technical skills I learned was ROS\r\n                            framework, Linux operating system, and the C++\r\n                            programming language. I also contributed to the team\r\n                            by reading up on ROS framework and quickly became\r\n                            the team's go to for references and direction within\r\n                            ROS.\r\n                        </Text>\r\n                    </AccordionPanel>\r\n                    <AccordionPanel label=\"Software Development Internship - Buildertrend\">\r\n                        <Text>\r\n                            During the summer of 2019 I had the opportunity to\r\n                            intern at Buildertrend in Omaha, Nebraska. I learned\r\n                            a lot about organizational structure at technology\r\n                            companies, and the modern Microsoft web app tech\r\n                            stack. As part of a team working on converting\r\n                            existing webpages into React (a\r\n                            JavaScript/TypeScript frontend framework), I learned\r\n                            how to work as part of a team in an agile work\r\n                            environment, with peers, managers, and project\r\n                            planning. Some specific skills I worked on over the\r\n                            summer were C# (specifically .NET Core and Entity\r\n                            framework), TypeScript, and SQL. Buildertrend was a\r\n                            great company to work with and they gave me a lot of\r\n                            opportunity to learn and grow, especially in the\r\n                            area of web development.\r\n                        </Text>\r\n                    </AccordionPanel>\r\n                </Accordion>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"grommet\";\r\nimport { Direction } from \"../types\";\r\n\r\ninterface IEtchASketchState {\r\n    keys?: string;\r\n    direction?: Direction;\r\n}\r\nexport class EtchASketch extends React.Component<IEtchASketchState> {\r\n    state: IEtchASketchState = {\r\n        keys: \"\",\r\n        direction: Direction.None,\r\n    };\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"keydown\", this.logKey);\r\n    };\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener(\"keydown\", this.logKey);\r\n    };\r\n    turnRight = () => {\r\n        console.log(\"right\");\r\n    };\r\n    turnLeft = () => {\r\n        console.log(\"left\");\r\n    };\r\n    turnBack = () => {\r\n        console.log(\"back\");\r\n    };\r\n    turnUp = () => {\r\n        console.log(\"up\");\r\n    };\r\n    logKey = (e: KeyboardEvent) => {\r\n        const keys = this.state.keys! + e.key;\r\n        this.setState({ keys });\r\n        if (e.key === \"ArrowLeft\" || e.key === \"a\") {\r\n            this.turnLeft();\r\n        } else if (e.key === \"ArrowRight\" || e.key === \"d\") {\r\n            this.turnRight();\r\n        } else if (e.key === \"ArrowDown\" || e.key === \"s\") {\r\n            this.turnBack();\r\n        } else if (e.key === \"ArrowUp\" || e.key === \"w\") {\r\n            this.turnUp();\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Text>{this.state.keys}</Text>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"grommet\";\r\n\r\nexport class ReflectionsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1> Reflections</h1>\r\n                <a href=\"genEdReflection.pdf\">\r\n                    <Text size=\"large\">General Education Reflection</Text>\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <a href=\"cumulativeReflection.pdf\">\r\n                    <Text size=\"large\">Cumulative Reflection</Text>\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <a href=\"engineering_ethics.pdf\">\r\n                    <Text size=\"large\">Engineering Ethics</Text>\r\n                </a>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { NavBar } from \"./Components/navBar\";\r\nimport { HomePage } from \"./Pages/homePage\";\r\nimport { AboutPage } from \"./Pages/aboutPage\";\r\nimport { ContactPage } from \"./Pages/conactPage\";\r\nimport { ProjectsPage } from \"./Pages/projectsPage\";\r\nimport { PageState } from \"./types\";\r\nimport { EtchASketch } from \"./Pages/etchASketch\";\r\nimport { Crossword } from \"./Components/crossWord\";\r\nimport { ReflectionsPage } from \"./Pages/reflectionsPage\";\r\n\r\ninterface IMainPageState {\r\n    page?: JSX.Element;\r\n    pageState?: PageState;\r\n}\r\n\r\nclass MainPage extends React.Component<IMainPageState> {\r\n    state: IMainPageState = {\r\n        page: <HomePage />,\r\n    };\r\n    handleHomeClick = () => {\r\n        this.setState({ page: <HomePage />, pageState: PageState.Home });\r\n        console.log(this.props.pageState);\r\n    };\r\n    handleAboutClick = () => {\r\n        this.setState({ page: <AboutPage />, pageState: PageState.About });\r\n    };\r\n    handleContactClick = () => {\r\n        this.setState({ page: <ContactPage />, pageState: PageState.Contact });\r\n    };\r\n    handleProjectsClick = () => {\r\n        this.setState({\r\n            page: <ProjectsPage />,\r\n            pageState: PageState.Projects,\r\n        });\r\n    };\r\n    handleEtchASketchClick = () => {\r\n        this.setState({\r\n            page: <EtchASketch />,\r\n            pageState: PageState.EtchASketch,\r\n        });\r\n    };\r\n    handleReflectionsClick = () => {\r\n        this.setState({\r\n            page: <ReflectionsPage />,\r\n            pageState: PageState.Reflections,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar\r\n                    handleHomeClick={this.handleHomeClick}\r\n                    handleAboutClick={this.handleAboutClick}\r\n                    handleContactClick={this.handleContactClick}\r\n                    handleProjectsClick={this.handleProjectsClick}\r\n                    handleEtchASketchClick={this.handleEtchASketchClick}\r\n                    handleReflectionsClick={this.handleReflectionsClick}\r\n                    pageState={this.state.pageState}\r\n                />\r\n                {/* <Crossword></Crossword> */}\r\n                {this.state.page}\r\n            </>\r\n        );\r\n    }\r\n}\r\nReactDOM.render(<MainPage />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}